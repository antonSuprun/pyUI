/*
-----------------------------------------------------------------------------
This source file is part of OSTIS (Open Semantic Technology for Intelligent Systems)
For the latest info, see http://www.ostis.net

Copyright (c) 2011 OSTIS

OSTIS is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

OSTIS is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with OSTIS.  If not, see <http://www.gnu.org/licenses/>.
-----------------------------------------------------------------------------
*/

//----------------------------------------------------------------------
//        File: search_templates.m4scp
// Description: Операция поиска конструкций по шаблону
//----------------------------------------------------------------------
//              Author: Anton Svitenkov	
//        Date: 06.03.12


#include "scp_keynodes.scsy"
#include "etc_questions.scsy"
#include "etc_questions_geometry.scsy"
#include "com_keynodes.scsy"
#include "_keynodes.scsy"
#include "lib_answer.scsy"
#include "lib_search.scsy"
#include "meta_info.scsy"

//программа инициализации операции
program(init_op,
[[
	// 	ключевой узел инициированный вопрос
	q_initiated;
	// множество элементов для которых будут отслеживаться события
	set_of_traced_element = {1_: q_initiated };
	run_op;
	catch_output_arc;
	answer_make;
	]],
[{
}])

sys_set_event_handler([
	1_: fixed_: catch_output_arc,
	2_: fixed_: run_op,
	3_: fixed_: {1_: q_initiated}
	])
return()
end()

//процедура обработки вопроса и генерации ответа
procedure(run_op,
[[
		search_binary_relations_connecting_two_concept_search_procedure;
		q_search_templates;
		stype_bin_orient_norole_rel;	
]],
[{
        // input params
        descr, question_node,element,arc,
        segment,t_seg, questionSet,
        descr2,tArc1,tAcr2,tNode1,tNode2, result, cur_el
}],
{[
        1_: in_: descr,
        2_: in_: element,
        3_: in_: arc,
        4_: in_: question_node
]}
)

printNl([1_: fixed_: /"checking: Op_search_templates"/])

sys_get_location([1_: fixed_: question_node, 2_: assign_: segment])
sys_spin_segment([1_: fixed_: segment, 2_: assign_: t_seg])
sys_open_segment([1_: fixed_: segment])
sys_set_default_segment([1_: fixed_: segment])



searchElStr3([
	1_: fixed_: q_search_templates,
	2_: assign_: arc_: const_: pos_: tArc1,
	3_: fixed_: question_node
], ,finish_op,runtime_error)

genEl([1_: assign_: const_: node_: result])


callReturn([
        1_: fixed_: search_base_cycle,
        2_: fixed_: {[
                1_: question_node,
                2_: search_templates_procedure,
                3_: result
                ]}
        ], , , runtime_error)


label(make_answer_end)
// добавляем результаты в ответ
	callReturn([
		1_: fixed_: answer_make,
		2_: fixed_: {[
			1_: question_node,
			2_: result
		]}
],finish_op,,runtime_error)




label(finish_op)
return()

// сообщение об ошибке во время выполнения
label(runtime_error)
printNl([1_: fixed_: /"\nOp_search_binary_relations_connecting_two_concept\nruntime_error"/])
return()

end()





procedure(search_templates_procedure,
[[
	
	
]],
[{
	segment,t_seg,
	tNode1,tNode2,tArc1,tArc2,firstNode,secondNode,tempSet1,tempSet2, pattern_node,
	question_node, result,curEl, tArc3, relNode, tempSet, tSetArc1, tSetArc2
	
}],
{[
	1_: in_: question_node,
	2_: in_: result
]})


sys_get_location([1_: fixed_: question_node, 2_: assign_: segment])
sys_spin_segment([1_: fixed_: segment, 2_: assign_: t_seg])
sys_open_segment([1_: fixed_: segment])
sys_set_default_segment([1_: fixed_: segment])

// ищем конструкцию по схеме
sys_search([
	1_: fixed_: question_node,
	4_: fixed_: result
], , finish_procedure,runtime_error)



searchSetStr3([
                 1_: fixed_: const_: question_node,
                 2_: assign_: const_: pos_: tArc1,
                 3_: assign_: node_ : curEl,
                 set3_: assign_: tempSet
               ],,finish_procedure,runtime_error)




//# добавляем в ответ все константные узлы	с шаблона		   
label(forBegin)
searchElStr3([
	1_:  fixed_: tempSet,
	2_: assign_: arc_: const_: pos_: tArc1,
	3_: assign_: const_: node_: curEl
], ,forEnd,runtime_error)

eraseEl([1_: f_: tArc1])


genElStr3([
    1_:  fixed_: result,
    2_: assign_: arc_: pos_: const_: tArc1,
    3_:  fixed_: curEl
])

nop(forBegin)
label(forEnd)



label(finish_procedure)
return()

label(runtime_error)
// сообщение об ошибке во время выполнения
printNl([1_: fixed_: /"\nOp_search_binary_relations_connecting_two_concept\nruntime_error"/])
return()

end()
